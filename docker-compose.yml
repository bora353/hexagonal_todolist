version: "3.8"
services:
  spring:
    container_name: spring
    build:
      context: ./spring
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    environment:
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
    depends_on:
      - postgres
    networks:
      - study

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 4321
    volumes:
      - /postgres-data:/var/lib/postgresql/data
    networks:
      - study

  # react:
  #   container_name: react
  #   build:
  #     context: ./ReactToDoList/reacttodolist
  #     dockerfile: Dockerfile
  #   restart: always
  #   command: npm start
  #   ports:
  #     - "3000:3000"
  #   # depends_on:
  #   #   - spring
  #   networks:
  #     - study

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
<<<<<<< HEAD
      - "3000:80"
    depends_on:
      - spring
    networks:
      - study

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

=======
      - "2181:2181"

>>>>>>> 01da1fa3dfb89a9158d35500fb43f49ac1a3e942
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

networks:
  study:
    name: study
    driver: bridge